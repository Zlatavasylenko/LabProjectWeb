// <auto-generated />
using System;
using LabProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabProject.Migrations
{
    [DbContext(typeof(CinemaContext))]
    partial class CinemaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabProject.Models.CastMember", b =>
                {
                    b.Property<int>("CastMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CastMemberId"));

                    b.Property<string>("CastMemberFullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CastMemberId");

                    b.ToTable("CastMember", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.Cinema", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinemaId"));

                    b.Property<string>("CinemaAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CinemaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CinemaId");

                    b.ToTable("Cinema", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("GenreId");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.Hall", b =>
                {
                    b.Property<int>("HallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HallId"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<int>("HallCapacity")
                        .HasColumnType("int");

                    b.Property<string>("HallName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("HallId");

                    b.HasIndex("CinemaId");

                    b.ToTable("Hall", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<int>("MovieDuration")
                        .HasColumnType("int");

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("MovieRating")
                        .HasColumnType("int");

                    b.Property<DateTime>("MovieReleaseDate")
                        .HasColumnType("date");

                    b.HasKey("MovieId");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.MovieCast", b =>
                {
                    b.Property<int>("MovieCastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieCastId"));

                    b.Property<int>("CastMemberId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("MovieCastId");

                    b.HasIndex("CastMemberId");

                    b.HasIndex("MovieId");

                    b.HasIndex("PositionId");

                    b.ToTable("MovieCast", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.MovieGenre", b =>
                {
                    b.Property<int>("MovieGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieGenreId"));

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("MovieGenreId");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieGenre", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PositionId");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SessionDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SessionNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.HasIndex("StatusId");

                    b.ToTable("Session", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StatusId");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("LabProject.Models.Hall", b =>
                {
                    b.HasOne("LabProject.Models.Cinema", "Cinema")
                        .WithMany("Halls")
                        .HasForeignKey("CinemaId")
                        .IsRequired()
                        .HasConstraintName("FK_Hall_Cinema");

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("LabProject.Models.MovieCast", b =>
                {
                    b.HasOne("LabProject.Models.CastMember", "CastMember")
                        .WithMany("MovieCasts")
                        .HasForeignKey("CastMemberId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieCast_CastMember");

                    b.HasOne("LabProject.Models.Movie", "Movie")
                        .WithMany("MovieCasts")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieCast_Movie");

                    b.HasOne("LabProject.Models.Position", "Position")
                        .WithMany("MovieCasts")
                        .HasForeignKey("PositionId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieCast_Position");

                    b.Navigation("CastMember");

                    b.Navigation("Movie");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("LabProject.Models.MovieGenre", b =>
                {
                    b.HasOne("LabProject.Models.Genre", "Genre")
                        .WithMany("MovieGenres")
                        .HasForeignKey("GenreId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieGenre_Genre");

                    b.HasOne("LabProject.Models.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK_MovieGenre_Movie");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("LabProject.Models.Session", b =>
                {
                    b.HasOne("LabProject.Models.Hall", "Hall")
                        .WithMany("Sessions")
                        .HasForeignKey("HallId")
                        .IsRequired()
                        .HasConstraintName("FK_Session_Hall");

                    b.HasOne("LabProject.Models.Movie", "Movie")
                        .WithMany("Sessions")
                        .HasForeignKey("MovieId")
                        .IsRequired()
                        .HasConstraintName("FK_Session_Movie");

                    b.HasOne("LabProject.Models.Status", "Status")
                        .WithMany("Sessions")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Session_Status");

                    b.Navigation("Hall");

                    b.Navigation("Movie");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("LabProject.Models.CastMember", b =>
                {
                    b.Navigation("MovieCasts");
                });

            modelBuilder.Entity("LabProject.Models.Cinema", b =>
                {
                    b.Navigation("Halls");
                });

            modelBuilder.Entity("LabProject.Models.Genre", b =>
                {
                    b.Navigation("MovieGenres");
                });

            modelBuilder.Entity("LabProject.Models.Hall", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("LabProject.Models.Movie", b =>
                {
                    b.Navigation("MovieCasts");

                    b.Navigation("MovieGenres");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("LabProject.Models.Position", b =>
                {
                    b.Navigation("MovieCasts");
                });

            modelBuilder.Entity("LabProject.Models.Status", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
